pipeline {
    agent { label 'master' }
    triggers {
        cron('0 07 * * 1-5')
    }
    //3. Environment variables
    environment {
        JAVA_TOOL_OPTIONS='-Duser.timezone=UTC -Dfile.encoding=UTF8'
        VATT_DECRYPTION_KEY = credentials('appian-vatt-decryption-key')
        EMAIL_DIST_LIST = 'n.chitre@elsevier.com'
        EMAIL_FROM = 'ephapplicationsupportnonprod@reedelsevier.com'
        ENV = 'UAT'
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
        ansiColor('xterm')
        timestamps()
    }
    stages {
        stage ('Initialise') {
            steps {
               deleteDir()
               checkout scm
            }
        }
       
        stage ('Run Tests') {
            steps {
                catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                    withMaven(jdk: 'OpenJDK-8-Win', maven: 'Maven-3.6.3', mavenLocalRepo: 'repository') {
                        bat('mvn clean test -Dcucumber.options="--tags @searchAPI" -e -X')
                    }
                }
            }
        }
    }
    post {
        failure {
            node() {
                emailext(subject: "${JOB_NAME} ${BUILD_NUMBER} failed",
               body: "Run ${JOB_NAME}-#${BUILD_NUMBER} failed. To get more details, visit the build results page: ${BUILD_URL}.",

                from: "${env.EMAIL_FROM}",
                to: "${env.EMAIL_DIST_LIST}")
            }
        }
        success {
       // echo "Test succeeded"
            node() {
                emailext(subject: "${JOB_NAME} ${BUILD_NUMBER} succeeded",
                body: "Run ${JOB_NAME}-#${BUILD_NUMBER} succeeded. To get more details, visit the build results page: ${BUILD_URL}.",

                from: "${env.EMAIL_FROM}",
                to: "${env.EMAIL_DIST_LIST}")
            }
        }

    }
}
